{
    "statsgen":{
        wordlist:""         			 //Input parameter(string:path of the wordlist to analyze)
        output:"statsgen.masks",         //Output parameter(string:default value "statsgen.masks")
        hiderare:"false",                //print parameters(bool:default value false, implicit value true)
        quiet:"false",                   //print results quietly(bool; default value false, implicit value true)
        charset:[                        //password charset (vector<string>:{"alpha", "numeric", ...} )
            "none",
        ]
        minlength:0                      //minimun password length(int: default value 0)
        maxlength:-1                     //maximun password length(int: -1 value invalidate this option)
    },


    "maskgen":{
        statsgen_output:"",              //input file generated by statsgen(string)
        output:"maskgen.hcmask",         //ouput file (string: default value "maskgen.hcmask")
        show:"true",                     //show generated masks (bool: default value false, implicit value true)
        quiet:"false",                   //print results quietly (bool: default value false, implicit value true)
        checkmasks=[                     //checkmask parameters (vector<Mask>:{"?l?a?u", "?d?d?d", ...})
            "?l?a?u",
            "?d?d?d"
        ],
        checkmasksfile:"",               //File of masks(string)
        charset:[                        //password charset (vector<string>:{"alpha", "numeric", ...} )
            "none"
        ],
        minlength:0,                     //minimun password length(int: default value 0)
        maxlength:-1,                    //maximun password length(int: default value -1 [this value invalidate this option])
        mincomplexity:0,                 //minimun password complexity(int: default value 0)
        maxcomplexity:100,               //maximun password complexity(int: default value 100)
        minoccurrence:0,                 //minimun password occurrence(int: default value 0)
        maxoccurrence:-1                 //maximun password occurrence(int: default value -1 [this value invalidate this option])
    },

    "policygen":{
        output:"complexity.hcmask",      //Output File(string)
        quiet:"false",                     //print results quietly (bool: default value false, implicit value true)
        show:"true",                       //show generated masks (bool: default value false, implicit value true)
        minlength:0,                     //minimun password length(int: default value 0)
        maxlength:-1,                    //maximun password length(int: default value -1 [this value invalidate this option])
        minlower:0,                      //minimum lowercase characters in password(int: default value 0)
        maxlower:-1,                     //maximum lowercase characters in password(int: int: default value -1 [this value invalidate this option])
        minupper:-1,                     //minimum lowercase characters in password(int: default value 0)
        maxupper:-1,                     //maximum lowercase characters in password(int: int: default value -1 [this value invalidate this option])
        mindigit:-1,                     //minimum password digits(int: default value 0)
        maxdigit:-1,                     //maximum password digits(int: int: default value -1 [this value invalidate this option])
        minspecial:-1,                   //minimum special characters in password(int: default value 0)
        maxspecial:-1,                   //maximum special characters in password(int: int: default value -1 [this value invalidate this option])
    }
}
